{"version":3,"sources":["Components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","placeholder","data","useState","filteredData","setFilteredData","wordEntered","setWordEntered","className","type","value","onChange","event","searchWord","target","newFilter","filter","title","toLowerCase","includes","length","id","onClick","slice","map","key","href","link","App","BookData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w1sBA4DeA,MAvDf,YAA2C,IAAtBC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KAAQ,EACAC,mBAAS,IADT,mBACjCC,EADiC,KACnBC,EADmB,OAEFF,mBAAS,IAFP,mBAEjCG,EAFiC,KAEpBC,EAFoB,KAuBxC,OACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,uBACEC,KAAK,OACLR,YAAaA,EACbS,MAAOJ,EACPK,SA1Ba,SAACC,GACpB,IAAMC,EAAaD,EAAME,OAAOJ,MAChCH,EAAeM,GACf,IAAME,EAAYb,EAAKc,QAAO,SAACN,GAC7B,OAAOA,EAAMO,MAAMC,cAAcC,SAASN,EAAWK,kBAIrDb,EADiB,KAAfQ,EACc,GAEAE,MAkBd,qBAAKP,UAAU,aAAf,SAC2B,IAAxBJ,EAAagB,OACZ,cAAC,IAAD,IAEA,cAAC,IAAD,CAAWC,GAAG,WAAWC,QAlBhB,WACjBjB,EAAgB,IAChBE,EAAe,YAoBW,GAAvBH,EAAagB,QACZ,qBAAKZ,UAAU,aAAf,SACGJ,EAAamB,MAAM,EAAG,IAAIC,KAAI,SAACd,EAAOe,GACrC,OACE,mBAAGjB,UAAU,WAAWkB,KAAMhB,EAAMiB,KAAMb,OAAO,SAAjD,SACE,8BAAIJ,EAAMO,MAAV,kB,QCrCDW,MARf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACE,cAAC,EAAD,CAAWP,YAAY,uBAAuBC,KAAM2B,OCI3CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69b32dbc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction SearchBar({ placeholder, data }) {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [wordEntered, setWordEntered] = useState(\"\");\r\n\r\n  const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n    const newFilter = data.filter((value) => {\r\n      return value.title.toLowerCase().includes(searchWord.toLowerCase());\r\n    });\r\n\r\n    if (searchWord === \"\") {\r\n      setFilteredData([]);\r\n    } else {\r\n      setFilteredData(newFilter);\r\n    }\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setFilteredData([]);\r\n    setWordEntered(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"searchInputs\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={wordEntered}\r\n          onChange={handleFilter}\r\n        />\r\n        <div className=\"searchIcon\">\r\n          {filteredData.length === 0 ? (\r\n            <SearchIcon />\r\n          ) : (\r\n            <CloseIcon id=\"clearBtn\" onClick={clearInput} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {filteredData.length != 0 && (\r\n        <div className=\"dataResult\">\r\n          {filteredData.slice(0, 15).map((value, key) => {\r\n            return (\r\n              <a className=\"dataItem\" href={value.link} target=\"_blank\">\r\n                <p>{value.title} </p>\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport SearchBar from \"./Components/SearchBar\";\r\nimport BookData from \"./Data.json\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchBar placeholder=\"Enter a Book Name...\" data={BookData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}